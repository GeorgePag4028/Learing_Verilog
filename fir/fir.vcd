$date
	Sat Aug 19 00:33:38 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fir_tb $end
$var wire 19 ! y [18:0] $end
$var wire 1 " valid_out $end
$var reg 1 # clock $end
$var reg 1 $ reset $end
$var reg 1 % valid_in $end
$var reg 8 & x [7:0] $end
$scope module dut $end
$var wire 1 # clock $end
$var wire 1 $ reset $end
$var wire 1 % valid_in $end
$var wire 8 ' x [7:0] $end
$var wire 19 ( y [18:0] $end
$var wire 1 ) we_control_unit $end
$var wire 1 " valid_out $end
$var wire 8 * rom_out_rom [7:0] $end
$var wire 3 + rom_address_control_unit [2:0] $end
$var wire 8 , ram_out_ram [7:0] $end
$var wire 3 - ram_address_control_unit [2:0] $end
$var wire 1 . mac_init_control_unit $end
$var wire 1 / en_control_unit $end
$var reg 1 0 mac_init_mac $end
$var reg 8 1 xt [7:0] $end
$scope module cudut $end
$var wire 1 # clock $end
$var wire 1 $ reset $end
$var wire 1 % valid_in $end
$var reg 3 2 counter [2:0] $end
$var reg 1 / en $end
$var reg 1 . mac_init $end
$var reg 3 3 ram_address [2:0] $end
$var reg 3 4 rom_address [2:0] $end
$var reg 1 ) we $end
$upscope $end
$scope module macdut $end
$var wire 1 # clock $end
$var wire 1 0 mac_init $end
$var wire 1 $ reset $end
$var wire 19 5 y [18:0] $end
$var wire 8 6 rom_out [7:0] $end
$var wire 8 7 ram_out [7:0] $end
$var parameter 32 8 data_width $end
$var reg 3 9 counter [2:0] $end
$var reg 1 " valid_out $end
$var reg 19 : y_temp [18:0] $end
$upscope $end
$scope module ramdut $end
$var wire 3 ; addr [2:0] $end
$var wire 1 # clock $end
$var wire 8 < di [7:0] $end
$var wire 1 / en $end
$var wire 1 $ reset $end
$var wire 1 ) we $end
$var parameter 32 = data_width $end
$var reg 8 > dio [7:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 ? i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 @ i [31:0] $end
$upscope $end
$upscope $end
$scope module romdut $end
$var wire 3 A addr [2:0] $end
$var wire 1 # clock $end
$var wire 1 / en $end
$var wire 8 B rdata [7:0] $end
$var parameter 32 C coeff_width $end
$var reg 8 D rom_out [7:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 E i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 C
b1000 =
b1000 8
$end
#0
$dumpvars
b0 E
b0 D
b1000 B
b0 A
b0 @
b1000 ?
b0 >
b0 <
b0 ;
b0 :
b0 9
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
x0
0/
0.
b0 -
b0 ,
b0 +
b0 *
0)
b0 (
b0 '
b0 &
0%
1$
1#
0"
b0 !
$end
#5
b1 E
0$
0#
#10
b1 9
1.
00
1#
#15
0#
b10 E
b1 &
b1 '
1%
#20
b1 2
1)
b10 9
b1 1
b1 <
10
1/
1#
#25
0#
b11 E
b10 &
b10 '
#30
b1 ,
b1 7
b1 >
b0 9
b10 2
b1 -
b1 3
b1 ;
b111 B
b1 +
b1 4
b1 A
0.
b10 1
b10 <
b1000 *
b1000 6
b1000 D
b111 @
1#
#35
0#
b100 E
b11 &
b11 '
#40
b10 ,
b10 7
b10 >
b11 2
b10 -
b10 3
b10 ;
b110 B
b10 +
b10 4
b10 A
b1000 !
b1000 (
b1000 5
b1000 :
b111 *
b111 6
b111 D
b11 1
b11 <
00
b111 @
1#
#45
0#
b101 E
b100 &
b100 '
#50
b11 ,
b11 7
b11 >
b1 9
b10110 !
b10110 (
b10110 5
b10110 :
b100 2
b11 -
b11 3
b11 ;
b101 B
b11 +
b11 4
b11 A
b100 1
b100 <
b110 *
b110 6
b110 D
b111 @
1#
#55
0#
b110 E
b101 &
b101 '
#60
b100 ,
b100 7
b100 >
b101 2
b100 -
b100 3
b100 ;
b100 B
b100 +
b100 4
b100 A
b101000 !
b101000 (
b101000 5
b101000 :
b10 9
b101 *
b101 6
b101 D
b101 1
b101 <
b111 @
1#
#65
0#
b111 E
b110 &
b110 '
#70
b101 ,
b101 7
b101 >
b11 9
b111100 !
b111100 (
b111100 5
b111100 :
b110 2
b101 -
b101 3
b101 ;
b11 B
b101 +
b101 4
b101 A
b110 1
b110 <
b100 *
b100 6
b100 D
b111 @
1#
#75
0#
b1000 E
b111 &
b111 '
#80
b110 ,
b110 7
b110 >
b111 2
b110 -
b110 3
b110 ;
b10 B
b110 +
b110 4
b110 A
b1010000 !
b1010000 (
b1010000 5
b1010000 :
b100 9
b11 *
b11 6
b11 D
b111 1
b111 <
b111 @
1#
#85
0%
0#
b1001 E
b1000 &
b1000 '
#90
b111 ,
b111 7
b111 >
b101 9
b1100010 !
b1100010 (
b1100010 5
b1100010 :
b0 2
b111 -
b111 3
b111 ;
b1 B
b111 +
b111 4
b111 A
b1000 1
b1000 <
b10 *
b10 6
b10 D
b111 @
1#
#95
0#
#100
b1000 ,
b1000 7
b1000 >
0/
1.
0)
b1110000 !
b1110000 (
b1110000 5
b1110000 :
b110 9
b1 *
b1 6
b1 D
b111 @
1#
#105
0#
#110
1"
b0 9
b1111000 !
b1111000 (
b1111000 5
b1111000 :
10
b0 *
b0 6
b0 D
1#
#115
0#
#120
b0 !
b0 (
b0 5
b0 :
0"
1#
#125
0#
#130
1#
#135
0#
#140
1#
#145
0#
#150
1#
#155
0#
#160
1#
#165
0#
#170
1#
#175
0#
#180
1#
#185
0#
